% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fiab_calculations_api.R
\docType{class}
\name{FIABCalculationsApi}
\alias{FIABCalculationsApi}
\title{FIABCalculations operations}
\format{
An \code{R6Class} generator object
}
\description{
factset.analyticsapi.engines.FIABCalculations
}
\section{Methods}{

\describe{
\strong{ GetCalculationById } \emph{ Get FIAB calculation by id }
This is the endpoint to check on the progress of a previously requested calculation.

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{FIABCalculationStatus} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | Expected response, returns status information of the entire calculation if it is complete.

\item return type : FIABCalculationStatus 
\item response headers :

\tabular{ll}{
Content-Encoding \tab Standard HTTP header. Header value based on Accept-Encoding Request header. \cr
Content-Type \tab Standard HTTP header. \cr
Transfer-Encoding \tab Standard HTTP header. Header value will be set to Chunked if Accept-Encoding header is specified. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 202 | Expected response, returns status information of the entire calculation if it is not complete.

\item return type : FIABCalculationStatus 
\item response headers :

\tabular{ll}{
Cache-Control \tab Standard HTTP header. Header will specify max-age in seconds. Polling can be adjusted based on the max-age value. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | Calculation was already returned, provided id was not a requested calculation, or the calculation was cancelled


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ GetCalculationStatusSummaries } \emph{ Get all FIAB calculation summaries }
This endpoints returns all FIAB calculation requests.

\itemize{
\item \emph{ @returnType } named list( \link{FIABCalculationStatusSummary} ) \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | List of active FIAB calculation requests.

\item return type : map(FIABCalculationStatusSummary) 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 406 | Unsupported Accept header. Header needs to be set to application/json.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 429 | Rate limit reached. Wait till the time specified in Retry-After header value to make further requests.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
Retry-After \tab Time to wait in seconds before making a new request as the rate limit has reached. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ RunCalculation } \emph{ Run FIAB calculation }
This endpoint creates a new FIAB calculation.  This must be used first before get status or cancelling endpoints with a calculation id.  A successful response will contain the URL to check the status of the calculation request.    Remarks:  * Any settings in POST body will act as a one-time override over the settings saved in the FIAB template.

\itemize{
\item \emph{ @param } fiab.calculation.parameters \link{FIABCalculationParameters}

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 202 | Expected response, contains the URL in the Location header to check the status of the calculation.


\item response headers :

\tabular{ll}{
Location \tab URL to check status of the request. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FIAB request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FIAB requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid POST body.


\item response headers :

\tabular{ll}{
Location \tab URL to check status of the request. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FIAB request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FIAB requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
Location \tab URL to check status of the request. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FIAB request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FIAB requests remaining till request limit reached. \cr
}
\item status code : 403 | User is forbidden with current credentials.


\item response headers :

\tabular{ll}{
Location \tab URL to check status of the request. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FIAB request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FIAB requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 415 | Missing/Invalid Content-Type header. Header needs to be set to application/json.


\item response headers :

\tabular{ll}{
Location \tab URL to check status of the request. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FIAB request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FIAB requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 429 | Rate limit reached. Cancel older requests using Cancel FIAB Calculation endpoint or wait for older requests to finish / expire.


\item response headers :

\tabular{ll}{
Location \tab URL to check status of the request. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FIAB request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FIAB requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
Retry-After \tab Time to wait in seconds before making a new request as the rate limit has reached. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.


\item response headers :

\tabular{ll}{
Location \tab URL to check status of the request. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FIAB request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FIAB requests remaining till request limit reached. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
Location \tab URL to check status of the request. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FIAB request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FIAB requests remaining till request limit reached. \cr
}
}

}
}

\examples{
\dontrun{
####################  GetCalculationById  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Run FIAB Calculation endpoint

#Get FIAB calculation by id
api.instance <- FIABCalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$GetCalculationById(var.id),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  GetCalculationStatusSummaries  ####################

library(factset.analyticsapi.engines)

#Get all FIAB calculation summaries
api.instance <- FIABCalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$GetCalculationStatusSummaries(),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  RunCalculation  ####################

library(factset.analyticsapi.engines)
var.fiab.calculation.parameters <- FIABCalculationParameters$new() # FIABCalculationParameters | 

#Run FIAB calculation
api.instance <- FIABCalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$RunCalculation(fiab.calculation.parameters=var.fiab.calculation.parameters),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{FIABCalculationsApi$new()}}
\item \href{#method-GetCalculationById}{\code{FIABCalculationsApi$GetCalculationById()}}
\item \href{#method-GetCalculationByIdWithHttpInfo}{\code{FIABCalculationsApi$GetCalculationByIdWithHttpInfo()}}
\item \href{#method-GetCalculationStatusSummaries}{\code{FIABCalculationsApi$GetCalculationStatusSummaries()}}
\item \href{#method-GetCalculationStatusSummariesWithHttpInfo}{\code{FIABCalculationsApi$GetCalculationStatusSummariesWithHttpInfo()}}
\item \href{#method-RunCalculation}{\code{FIABCalculationsApi$RunCalculation()}}
\item \href{#method-RunCalculationWithHttpInfo}{\code{FIABCalculationsApi$RunCalculationWithHttpInfo()}}
\item \href{#method-clone}{\code{FIABCalculationsApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FIABCalculationsApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationById"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationById}{}}}
\subsection{Method \code{GetCalculationById()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FIABCalculationsApi$GetCalculationById(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationByIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationByIdWithHttpInfo}{}}}
\subsection{Method \code{GetCalculationByIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FIABCalculationsApi$GetCalculationByIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationStatusSummaries"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationStatusSummaries}{}}}
\subsection{Method \code{GetCalculationStatusSummaries()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FIABCalculationsApi$GetCalculationStatusSummaries(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationStatusSummariesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationStatusSummariesWithHttpInfo}{}}}
\subsection{Method \code{GetCalculationStatusSummariesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FIABCalculationsApi$GetCalculationStatusSummariesWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RunCalculation"></a>}}
\if{latex}{\out{\hypertarget{method-RunCalculation}{}}}
\subsection{Method \code{RunCalculation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FIABCalculationsApi$RunCalculation(fiab.calculation.parameters = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RunCalculationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RunCalculationWithHttpInfo}{}}}
\subsection{Method \code{RunCalculationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FIABCalculationsApi$RunCalculationWithHttpInfo(
  fiab.calculation.parameters = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FIABCalculationsApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
