% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fi_calculations_api.R
\docType{class}
\name{FICalculationsApi}
\alias{FICalculationsApi}
\title{FICalculations operations}
\format{
An \code{R6Class} generator object
}
\description{
factset.analyticsapi.engines.FICalculations
}
\section{Methods}{

\describe{
\strong{ CancelCalculationById } \emph{ Cancel FI calculation by id }
This is the endpoint to cancel a previously submitted calculation.

\itemize{
\item \emph{ @param } id character

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 204 | Expected response, calculation was canceled successfully.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | There was no request for the calculation identifier provided, or the request was already canceled for the provided identifier.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ GetCalculationParameters } \emph{ Get FI calculation parameters by id }
This is the endpoint that returns the calculation parameters passed for a calculation.

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{FICalculationParametersRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | Expected response, returns the FI calculation parameters.

\item return type : FICalculationParametersRoot 
\item response headers :

\tabular{ll}{
Content-Encoding \tab Standard HTTP header. Header value based on Accept-Encoding Request header. \cr
Content-Type \tab Standard HTTP header. \cr
Transfer-Encoding \tab Standard HTTP header. Header value will be set to Chunked if Accept-Encoding header is specified. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | Calculation id not found

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ GetCalculationResult } \emph{ Get FI calculation result by id }
This is the endpoint to get the result of a previously requested calculation.  If the calculation has finished computing, the body of the response will contain the requested document in JSON.

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } accept character
\item \emph{ @returnType } \link{ObjectRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | Expected response once calculation is completed, returns JSON in the format specified in the Calculation parameters.

\item return type : ObjectRoot 
\item response headers :

\tabular{ll}{
Content-Encoding \tab Standard HTTP header. Header value based on Accept-Encoding Request header. \cr
Content-Type \tab Standard HTTP header. \cr
Transfer-Encoding \tab Standard HTTP header. Header value will be set to Chunked if Accept-Encoding header is specified. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | Calculation was already returned, provided id was not a requested calculation, or the calculation was cancelled

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ GetCalculationStatusById } \emph{ Get FI calculation status by id }
This is the endpoint to check on the progress of a previously requested calculation.  If the calculation has finished computing, the body of the response will contain the requested document in JSON.  Otherwise, the calculation is still running and the X-FactSet-Api-PickUp-Progress header will contain a progress percentage.

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{ObjectRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 201 | Expected response once calculation is completed, returns JSON in the format specified in the Calculation parameters.

\item return type : ObjectRoot 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 202 | Expected response returned if the calculation is not yet completed, should contain X-FactSet-Api-PickUp-Progress header.


\item response headers :

\tabular{ll}{
X-FactSet-Api-PickUp-Progress \tab FactSet&#39;s progress header. \cr
Cache-Control \tab Standard HTTP header. Header will specify max-age in seconds. Polling can be adjusted based on the max-age value. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | Calculation was already returned, provided id was not a requested calculation, or the calculation was cancelled

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ PostAndCalculate } \emph{ Create and Run FI calculation }
This endpoint creates and runs a new FI calculation specified in the post body.

\itemize{
\item \emph{ @param } x.fact.set.api.long.running.deadline integer
\item \emph{ @param } cache.control character
\item \emph{ @param } fi.calculation.parameters.root \link{FICalculationParametersRoot}
\item \emph{ @returnType } \link{ObjectRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 202 | Expected response, contains the poll URL in the Location header.

\item return type : CalculationInfoRoot 
\item response headers :

\tabular{ll}{
Location \tab URL to poll for the resulting calculation \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 201 | Expected response if calculation is completed in a short span, returns JSON in the format specified in the Calculation parameters.

\item return type : ObjectRoot 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid calculation parameters.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | One or more calculation settings were unavailable.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 415 | Missing/Invalid Content-Type header. Header needs to be set to application/json.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 429 | Rate limit reached. Cancel older requests using Cancel Calculation endpoint or wait for older requests to finish/expire.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
Retry-After \tab Time to wait in seconds before making a new request as the rate limit has reached. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-Calculations-Limit \tab Maximum FI request limit. \cr
X-FactSet-Api-Calculations-Remaining \tab Number of FI requests remaining till request limit reached. \cr
}
}

\strong{ PutAndCalculate } \emph{ Create or Update FI calculation and run it. }
This endpoint updates and run the FI optimization specified in the PUT body parameters. It also allows the creation of new FI optimization with custom id.

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } x.fact.set.api.long.running.deadline integer
\item \emph{ @param } cache.control character
\item \emph{ @param } fi.calculation.parameters.root \link{FICalculationParametersRoot}
\item \emph{ @returnType } \link{ObjectRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 202 | Expected response, contains the poll URL in the Location header.

\item return type : CalculationInfoRoot 
\item response headers :

\tabular{ll}{
Location \tab URL to poll for the resulting calculation \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 201 | Expected response if calculation is completed in a short span, returns JSON in the format specified in the Calculation parameters.

\item return type : ObjectRoot 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid Calculation Parameters.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | One or more calculation settings were unavailable.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 415 | Missing/Invalid Content-Type header. Header needs to be set to application/json.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 429 | Rate limit reached. Cancel older requests using Cancel Calculation endpoint or wait for older requests to finish/expire.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
Retry-After \tab Time to wait in seconds before making a new request as the rate limit has reached. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

}
}

\examples{
\dontrun{
####################  CancelCalculationById  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Create and Run FI calculation endpoint

#Cancel FI calculation by id
api.instance <- FICalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$CancelCalculationById(var.id),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  GetCalculationParameters  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Create and Run FI calculation endpoint

#Get FI calculation parameters by id
api.instance <- FICalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$GetCalculationParameters(var.id),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  GetCalculationResult  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Get FI calculation status by id endpoint
var.accept <- 'accept_example' # character | Standard HTTP header. Value can be gzip, compress, deflate, br, identity and/or *

#Get FI calculation result by id
api.instance <- FICalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$GetCalculationResult(var.id, accept=var.accept),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  GetCalculationStatusById  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Create and Run FI calculation endpoint

#Get FI calculation status by id
api.instance <- FICalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$GetCalculationStatusById(var.id),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  PostAndCalculate  ####################

library(factset.analyticsapi.engines)
var.x.fact.set.api.long.running.deadline <- 56 # integer | Long running deadline in seconds.
var.cache.control <- 'cache.control_example' # character | Standard HTTP header.  Accepts no-cache, no-store, max-age, max-stale.
var.fi.calculation.parameters.root <- FICalculationParametersRoot$new() # FICalculationParametersRoot | Calculation Parameters

#Create and Run FI calculation
api.instance <- FICalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$PostAndCalculate(x.fact.set.api.long.running.deadline=var.x.fact.set.api.long.running.deadline, cache.control=var.cache.control, fi.calculation.parameters.root=var.fi.calculation.parameters.root),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  PutAndCalculate  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Create and Run FI calculation endpoint
var.x.fact.set.api.long.running.deadline <- 56 # integer | Long running deadline in seconds.
var.cache.control <- 'cache.control_example' # character | Standard HTTP header.  Accepts no-cache, no-store, max-age, max-stale.
var.fi.calculation.parameters.root <- FICalculationParametersRoot$new() # FICalculationParametersRoot | Calculation Parameters

#Create or Update FI calculation and run it.
api.instance <- FICalculationsApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$PutAndCalculate(var.id, x.fact.set.api.long.running.deadline=var.x.fact.set.api.long.running.deadline, cache.control=var.cache.control, fi.calculation.parameters.root=var.fi.calculation.parameters.root),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{FICalculationsApi$new()}}
\item \href{#method-CancelCalculationById}{\code{FICalculationsApi$CancelCalculationById()}}
\item \href{#method-CancelCalculationByIdWithHttpInfo}{\code{FICalculationsApi$CancelCalculationByIdWithHttpInfo()}}
\item \href{#method-GetCalculationParameters}{\code{FICalculationsApi$GetCalculationParameters()}}
\item \href{#method-GetCalculationParametersWithHttpInfo}{\code{FICalculationsApi$GetCalculationParametersWithHttpInfo()}}
\item \href{#method-GetCalculationResult}{\code{FICalculationsApi$GetCalculationResult()}}
\item \href{#method-GetCalculationResultWithHttpInfo}{\code{FICalculationsApi$GetCalculationResultWithHttpInfo()}}
\item \href{#method-GetCalculationStatusById}{\code{FICalculationsApi$GetCalculationStatusById()}}
\item \href{#method-GetCalculationStatusByIdWithHttpInfo}{\code{FICalculationsApi$GetCalculationStatusByIdWithHttpInfo()}}
\item \href{#method-PostAndCalculate}{\code{FICalculationsApi$PostAndCalculate()}}
\item \href{#method-PostAndCalculateWithHttpInfo}{\code{FICalculationsApi$PostAndCalculateWithHttpInfo()}}
\item \href{#method-PutAndCalculate}{\code{FICalculationsApi$PutAndCalculate()}}
\item \href{#method-PutAndCalculateWithHttpInfo}{\code{FICalculationsApi$PutAndCalculateWithHttpInfo()}}
\item \href{#method-clone}{\code{FICalculationsApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CancelCalculationById"></a>}}
\if{latex}{\out{\hypertarget{method-CancelCalculationById}{}}}
\subsection{Method \code{CancelCalculationById()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$CancelCalculationById(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CancelCalculationByIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-CancelCalculationByIdWithHttpInfo}{}}}
\subsection{Method \code{CancelCalculationByIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$CancelCalculationByIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationParameters"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationParameters}{}}}
\subsection{Method \code{GetCalculationParameters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$GetCalculationParameters(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationParametersWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationParametersWithHttpInfo}{}}}
\subsection{Method \code{GetCalculationParametersWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$GetCalculationParametersWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationResult"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationResult}{}}}
\subsection{Method \code{GetCalculationResult()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$GetCalculationResult(id, accept = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationResultWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationResultWithHttpInfo}{}}}
\subsection{Method \code{GetCalculationResultWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$GetCalculationResultWithHttpInfo(id, accept = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationStatusById"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationStatusById}{}}}
\subsection{Method \code{GetCalculationStatusById()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$GetCalculationStatusById(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetCalculationStatusByIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetCalculationStatusByIdWithHttpInfo}{}}}
\subsection{Method \code{GetCalculationStatusByIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$GetCalculationStatusByIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PostAndCalculate"></a>}}
\if{latex}{\out{\hypertarget{method-PostAndCalculate}{}}}
\subsection{Method \code{PostAndCalculate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$PostAndCalculate(
  x.fact.set.api.long.running.deadline = NULL,
  cache.control = NULL,
  fi.calculation.parameters.root = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PostAndCalculateWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-PostAndCalculateWithHttpInfo}{}}}
\subsection{Method \code{PostAndCalculateWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$PostAndCalculateWithHttpInfo(
  x.fact.set.api.long.running.deadline = NULL,
  cache.control = NULL,
  fi.calculation.parameters.root = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PutAndCalculate"></a>}}
\if{latex}{\out{\hypertarget{method-PutAndCalculate}{}}}
\subsection{Method \code{PutAndCalculate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$PutAndCalculate(
  id,
  x.fact.set.api.long.running.deadline = NULL,
  cache.control = NULL,
  fi.calculation.parameters.root = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PutAndCalculateWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-PutAndCalculateWithHttpInfo}{}}}
\subsection{Method \code{PutAndCalculateWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$PutAndCalculateWithHttpInfo(
  id,
  x.fact.set.api.long.running.deadline = NULL,
  cache.control = NULL,
  fi.calculation.parameters.root = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FICalculationsApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
