% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fpo_optimizer_api.R
\docType{class}
\name{FPOOptimizerApi}
\alias{FPOOptimizerApi}
\title{FPOOptimizer operations}
\format{
An \code{R6Class} generator object
}
\description{
factset.analyticsapi.engines.FPOOptimizer
}
\section{Methods}{

\describe{
\strong{ CancelOptimizationById } \emph{ Cancel FPO optimization by id }
This is the endpoint to cancel a previously submitted optimization.

\itemize{
\item \emph{ @param } id character

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 204 | Expected response, optimization was canceled successfully.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | There was no request for the optimization identifier provided, or the request was already canceled for the provided identifier.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ GetOptimizationParameters } \emph{ Get FPO optimization parameters by id }
This is the endpoint that returns the optimization parameters passed for a calculation.

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{FPOOptimizationParametersRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | Expected response, returns the FPO optimization parameters.

\item return type : FPOOptimizationParametersRoot 
\item response headers :

\tabular{ll}{
Content-Encoding \tab Standard HTTP header. Header value based on Accept-Encoding Request header. \cr
Content-Type \tab Standard HTTP header. \cr
Transfer-Encoding \tab Standard HTTP header. Header value will be set to Chunked if Accept-Encoding header is specified. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | Optimization id not found

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ GetOptimizationResult } \emph{ Get FPO optimization result by id }
This is the endpoint to get the result of a previously requested optimization.  If the optimization has finished computing, the body of the response will contain result in JSON.

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } accept character
\item \emph{ @returnType } \link{ObjectRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | Expected response once optimization is completed, returns JSON.

\item return type : ObjectRoot 
\item response headers :

\tabular{ll}{
Content-Encoding \tab Standard HTTP header. Header value based on Accept-Encoding Request header. \cr
Content-Type \tab Standard HTTP header. \cr
Transfer-Encoding \tab Standard HTTP header. Header value will be set to Chunked if Accept-Encoding header is specified. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | Optimization result was already returned, provided id was not a requested optimization, or the optimization was cancelled

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ GetOptimizationStatusById } \emph{ Get FPO optimization status by id }
This is the endpoint to check on the progress of a previously requested optimization.  If the optimization has finished computing, the body of the response will contain result in JSON.  Otherwise, the optimization is still running and the X-FactSet-Api-PickUp-Progress header will contain a progress percentage.

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{ObjectRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 201 | Expected response once optimization is completed, returns JSON.

\item return type : ObjectRoot 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 202 | Expected response returned if the optimization is not yet completed, should contain X-FactSet-Api-PickUp-Progress header.


\item response headers :

\tabular{ll}{
X-FactSet-Api-PickUp-Progress \tab FactSet&#39;s progress header. \cr
Cache-Control \tab Standard HTTP header. Header will specify max-age in seconds. Polling can be adjusted based on the max-age value. \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid identifier provided.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | Optimization result was already returned, provided id was not a requested optimization, or the optimization was cancelled

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ PostAndOptimize } \emph{ Create and Run FPO optimization }
This endpoint runs FPO optimization specified in the POST body parameters.                Remarks:                * Any settings in POST body will act as a one-time override over the settings saved in the strategy document.

\itemize{
\item \emph{ @param } x.fact.set.api.long.running.deadline integer
\item \emph{ @param } cache.control character
\item \emph{ @param } fpo.optimization.parameters.root \link{FPOOptimizationParametersRoot}
\item \emph{ @returnType } \link{ObjectRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 202 | Expected response, contains the poll URL in the Location header.

\item return type : CalculationInfoRoot 
\item response headers :

\tabular{ll}{
Location \tab URL to poll for the resulting optimization \cr
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 201 | Expected response, returns json if optimization is completed in a short span.

\item return type : ObjectRoot 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid optimization parameters.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | One or more optimization settings were unavailable.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 415 | Missing/Invalid Content-Type header. Header needs to be set to application/json.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 429 | Rate limit reached. Cancel older requests using Cancel optimization endpoint or wait for older requests to finish/expire.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
Retry-After \tab Time to wait in seconds before making a new request as the rate limit has reached. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet’s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

\strong{ PutAndOptimize } \emph{ Create or Update FPO optimization and run it. }
This endpoint updates and run the FPO optimization specified in the PUT body parameters. It also allows the creation of new FPO optimization with custom id.

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } x.fact.set.api.long.running.deadline integer
\item \emph{ @param } cache.control character
\item \emph{ @param } fpo.optimization.parameters.root \link{FPOOptimizationParametersRoot}
\item \emph{ @returnType } \link{ObjectRoot} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 202 | Expected response, contains the poll URL in the Location header.

\item return type : CalculationInfoRoot 
\item response headers :

\tabular{ll}{
Location \tab URL to poll for the resulting calculation \cr
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 201 | Expected response, returns json if optimization is completed in a short span.

\item return type : ObjectRoot 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 400 | Invalid Optimization Parameters.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 404 | One or more optimization settings were unavailable.

\item return type : ClientErrorResponse 
\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 401 | Missing or invalid authentication.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 403 | User is forbidden with current credentials


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 415 | Missing/Invalid Content-Type header. Header needs to be set to application/json.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
}
\item status code : 429 | Rate limit reached. Cancel older requests using Cancel optimization endpoint or wait for older requests to finish/expire.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
X-FactSet-Api-RateLimit-Limit \tab Number of allowed requests for the time window. \cr
X-FactSet-Api-RateLimit-Remaining \tab Number of requests left for the time window. \cr
X-FactSet-Api-RateLimit-Reset \tab Number of seconds remaining till rate limit resets. \cr
Retry-After \tab Time to wait in seconds before making a new request as the rate limit has reached. \cr
}
\item status code : 500 | Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
\item status code : 503 | Request timed out. Retry the request in sometime.


\item response headers :

\tabular{ll}{
X-DataDirect-Request-Key \tab FactSet&#39;s request key header. \cr
X-FactSet-Api-Request-Key \tab Key to uniquely identify an Analytics API request. Only available after successful authentication. \cr
}
}

}
}

\examples{
\dontrun{
####################  CancelOptimizationById  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Create and Run FPO optimization endpoint

#Cancel FPO optimization by id
api.instance <- FPOOptimizerApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$CancelOptimizationById(var.id),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  GetOptimizationParameters  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Create and Run FPO optimization endpoint

#Get FPO optimization parameters by id
api.instance <- FPOOptimizerApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$GetOptimizationParameters(var.id),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  GetOptimizationResult  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Get FPO optimization status by id endpoint
var.accept <- 'accept_example' # character | Standard HTTP header. Value can be gzip, compress, deflate, br, identity and/or *

#Get FPO optimization result by id
api.instance <- FPOOptimizerApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$GetOptimizationResult(var.id, accept=var.accept),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  GetOptimizationStatusById  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Create and Run FPO optimization endpoint

#Get FPO optimization status by id
api.instance <- FPOOptimizerApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$GetOptimizationStatusById(var.id),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  PostAndOptimize  ####################

library(factset.analyticsapi.engines)
var.x.fact.set.api.long.running.deadline <- 56 # integer | Long running deadline in seconds.
var.cache.control <- 'cache.control_example' # character | Standard HTTP header.  Accepts no-cache, no-store, max-age, max-stale.
var.fpo.optimization.parameters.root <- FPOOptimizationParametersRoot$new() # FPOOptimizationParametersRoot | Calculation Parameters

#Create and Run FPO optimization
api.instance <- FPOOptimizerApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$PostAndOptimize(x.fact.set.api.long.running.deadline=var.x.fact.set.api.long.running.deadline, cache.control=var.cache.control, fpo.optimization.parameters.root=var.fpo.optimization.parameters.root),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


####################  PutAndOptimize  ####################

library(factset.analyticsapi.engines)
var.id <- 'id_example' # character | from url, provided from the location header in the Create and Run FPO optimization endpoint
var.x.fact.set.api.long.running.deadline <- 56 # integer | Long running deadline in seconds.
var.cache.control <- 'cache.control_example' # character | Standard HTTP header.  Accepts no-cache, no-store, max-age, max-stale.
var.fpo.optimization.parameters.root <- FPOOptimizationParametersRoot$new() # FPOOptimizationParametersRoot | Calculation Parameters

#Create or Update FPO optimization and run it.
api.instance <- FPOOptimizerApi$new()

#Configure HTTP basic authorization: Basic
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- tryCatch(
            api.instance$PutAndOptimize(var.id, x.fact.set.api.long.running.deadline=var.x.fact.set.api.long.running.deadline, cache.control=var.cache.control, fpo.optimization.parameters.root=var.fpo.optimization.parameters.root),
            ApiException = function(ex) ex 
         )
# In case of error, print the error object 
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{FPOOptimizerApi$new()}}
\item \href{#method-CancelOptimizationById}{\code{FPOOptimizerApi$CancelOptimizationById()}}
\item \href{#method-CancelOptimizationByIdWithHttpInfo}{\code{FPOOptimizerApi$CancelOptimizationByIdWithHttpInfo()}}
\item \href{#method-GetOptimizationParameters}{\code{FPOOptimizerApi$GetOptimizationParameters()}}
\item \href{#method-GetOptimizationParametersWithHttpInfo}{\code{FPOOptimizerApi$GetOptimizationParametersWithHttpInfo()}}
\item \href{#method-GetOptimizationResult}{\code{FPOOptimizerApi$GetOptimizationResult()}}
\item \href{#method-GetOptimizationResultWithHttpInfo}{\code{FPOOptimizerApi$GetOptimizationResultWithHttpInfo()}}
\item \href{#method-GetOptimizationStatusById}{\code{FPOOptimizerApi$GetOptimizationStatusById()}}
\item \href{#method-GetOptimizationStatusByIdWithHttpInfo}{\code{FPOOptimizerApi$GetOptimizationStatusByIdWithHttpInfo()}}
\item \href{#method-PostAndOptimize}{\code{FPOOptimizerApi$PostAndOptimize()}}
\item \href{#method-PostAndOptimizeWithHttpInfo}{\code{FPOOptimizerApi$PostAndOptimizeWithHttpInfo()}}
\item \href{#method-PutAndOptimize}{\code{FPOOptimizerApi$PutAndOptimize()}}
\item \href{#method-PutAndOptimizeWithHttpInfo}{\code{FPOOptimizerApi$PutAndOptimizeWithHttpInfo()}}
\item \href{#method-clone}{\code{FPOOptimizerApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CancelOptimizationById"></a>}}
\if{latex}{\out{\hypertarget{method-CancelOptimizationById}{}}}
\subsection{Method \code{CancelOptimizationById()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$CancelOptimizationById(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CancelOptimizationByIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-CancelOptimizationByIdWithHttpInfo}{}}}
\subsection{Method \code{CancelOptimizationByIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$CancelOptimizationByIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetOptimizationParameters"></a>}}
\if{latex}{\out{\hypertarget{method-GetOptimizationParameters}{}}}
\subsection{Method \code{GetOptimizationParameters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$GetOptimizationParameters(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetOptimizationParametersWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetOptimizationParametersWithHttpInfo}{}}}
\subsection{Method \code{GetOptimizationParametersWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$GetOptimizationParametersWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetOptimizationResult"></a>}}
\if{latex}{\out{\hypertarget{method-GetOptimizationResult}{}}}
\subsection{Method \code{GetOptimizationResult()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$GetOptimizationResult(id, accept = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetOptimizationResultWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetOptimizationResultWithHttpInfo}{}}}
\subsection{Method \code{GetOptimizationResultWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$GetOptimizationResultWithHttpInfo(id, accept = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetOptimizationStatusById"></a>}}
\if{latex}{\out{\hypertarget{method-GetOptimizationStatusById}{}}}
\subsection{Method \code{GetOptimizationStatusById()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$GetOptimizationStatusById(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetOptimizationStatusByIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetOptimizationStatusByIdWithHttpInfo}{}}}
\subsection{Method \code{GetOptimizationStatusByIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$GetOptimizationStatusByIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PostAndOptimize"></a>}}
\if{latex}{\out{\hypertarget{method-PostAndOptimize}{}}}
\subsection{Method \code{PostAndOptimize()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$PostAndOptimize(
  x.fact.set.api.long.running.deadline = NULL,
  cache.control = NULL,
  fpo.optimization.parameters.root = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PostAndOptimizeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-PostAndOptimizeWithHttpInfo}{}}}
\subsection{Method \code{PostAndOptimizeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$PostAndOptimizeWithHttpInfo(
  x.fact.set.api.long.running.deadline = NULL,
  cache.control = NULL,
  fpo.optimization.parameters.root = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PutAndOptimize"></a>}}
\if{latex}{\out{\hypertarget{method-PutAndOptimize}{}}}
\subsection{Method \code{PutAndOptimize()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$PutAndOptimize(
  id,
  x.fact.set.api.long.running.deadline = NULL,
  cache.control = NULL,
  fpo.optimization.parameters.root = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PutAndOptimizeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-PutAndOptimizeWithHttpInfo}{}}}
\subsection{Method \code{PutAndOptimizeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$PutAndOptimizeWithHttpInfo(
  id,
  x.fact.set.api.long.running.deadline = NULL,
  cache.control = NULL,
  fpo.optimization.parameters.root = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FPOOptimizerApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
